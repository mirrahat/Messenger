/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package messeger;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;
import static messeger.Online.onlinelist;
import static messeger.Online.shownameList;
import static messeger.ServerThread.din;

/**
 *
 * @author mirrahat
 */
public class Login extends javax.swing.JFrame {

    public static String username;
    ArrayList<String> userlist = new ArrayList<String>();
    static ArrayList<String> tablelist = new ArrayList<String>();

    ArrayList<String> lists = new ArrayList<String>();

    static ArrayList<String> onlinelist = new ArrayList<String>();
//ArrayList<String> names = new ArrayList<String>();
    static Socket s;
    static ServerSocket ss;
    static int port = Port.port;
    String address = Port.address;
    String connect_name;
    boolean isConnected = false;
    static String username_online;
    BufferedReader reader;
    PrintWriter writer;
    static ArrayList<String> usernamelist = new ArrayList<String>();

    static ArrayList<String> list = new ArrayList<String>();
    public boolean leavegroupchat = false;
      public boolean idsign = false;
    public static int idnum = -1;
    public static String myid;
    private boolean chatwindow_show[] = new boolean[10];
    
    private boolean group_show[] = new boolean[10];
    public static int storeclientid;
    public static String myname;

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        for (int i = 0; i < 10; i++) {
            chatwindow_show[i] = false;
            group_show[i]=false;
            //new Login().setLocation(30, 20);
            
        }
       // front.setVisible(false);
    }

    public void ListenThread() {
        Thread IncomingReader = new Thread(new IncomingReader());
        IncomingReader.start();
        System.out.println("Thread start");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        welcome_msg = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        connect = new javax.swing.JButton();
        connection_field = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        user_name = new javax.swing.JTextField();
        register_button = new javax.swing.JButton();
        WelcomeLevel = new javax.swing.JLabel();
        ChatterBodLevel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        connect.setText("Connect");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        connection_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connection_fieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Log in");

        jLabel5.setText("Password");

        jLabel6.setText("User");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(connect, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(connection_field, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(19, 19, 19))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connection_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connect)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        user_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_nameActionPerformed(evt);
            }
        });

        register_button.setText("Register");
        register_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_buttonActionPerformed(evt);
            }
        });

        WelcomeLevel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        WelcomeLevel.setText("Welcome to");

        ChatterBodLevel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        ChatterBodLevel.setText("Chatter Box");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Sign up");

        jLabel8.setText("User");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(welcome_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(158, 158, 158)
                                .addComponent(ChatterBodLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(216, 216, 216)
                                .addComponent(WelcomeLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(register_button)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(user_name, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(WelcomeLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChatterBodLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(welcome_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(user_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(register_button)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void register_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_buttonActionPerformed
        // TODO add your handling code here:
        if (user_name.getText().equals("")) {

        } else {
            username = user_name.getText();
            System.out.println(username);
            userlist.add(username);
            

        }

    }//GEN-LAST:event_register_buttonActionPerformed

    public class IncomingReader implements Runnable {

        @Override
        public void run() {
            String message, connect = "Connect",leavegroup="leavegroup",groupchat="groupchat", messeges = "messege", username = "username", chat = "chat", remove = "remove", id = "id",logout="logout",group="group";
            String[] data;

            try {
                while ((message = reader.readLine()) != null) {
                    System.out.println(" at   firt  of  loop     id " + idnum);
                    System.out.println("Received: " + message + "\n");
                    data = message.split(":");

                    for (String token : data) {
                        System.out.println("data 0 " + data[0] + " data 1 " + data[1]);
                        System.out.println("token  " + token + "\n");
                    }

                    if (data[1].equals(username)) {
                        tablelist.add(data[2] + ":");
                        //tablelist.remove(stream);
                        System.out.println("count  table  adding");
                        System.out.println(" " + data[1]);
                        Online.AddRowtoTable(tablelist);
                        tablelist.removeAll(tablelist);
                    } else if (data[0].equals(chat)) {
                        System.out.println("--- " + data[2]);
                        storeclientid = Integer.parseInt(data[4]);
                         myname=Online.shownameList.get(storeclientid);
                        String clientname=Online.shownameList.get(storeclientid);
                        System.out.println("  " + data[4]);
                        //front.setVisible(true);
                        System.out.println("   cliend id " + data[4] + "storeclientid " + storeclientid);
                        if(chatwindow_show[storeclientid]==false){
                        new MyChatbox().setVisible(true);
                        chatwindow_show[storeclientid]=true;
                        
                       // MyChatbox.show_message.setEditable(false);
                        }
                       // MyChatbox.show_message.setText(data[2]);
                        MyChatbox.testarea.setText(" \n "+MyChatbox.testarea.getText().trim()+" \n "+myname+":"+data[2]);
                        //MyChatbox.testfield.setText(data[2]);
                        MyChatbox.clientname.setText(clientname);

                        //conversation.setText(data[2]);
                    } else if (data[1].equals(remove)) {
                        //tablelist.removeAll(tablelist);
                        tablelist.add("remove:" + data[0]);
                    } else if (data[1].equals(id)) {
                        //tablelist.removeAll(tablelist);
                        if (idsign == false) {
                            idnum = Integer.parseInt(data[2]);
                            System.out.println("after asign          idnum    is" + idnum);
                            idsign = true;
                        }
                        //tablelist.add("remove:"+data[0]);
                    }else if (data[1].equals(logout)) {
                        System.out.println("user  logout ");
                         int row = Integer.parseInt(data[2]);
                     
                        Online.removetable(row);
                        Online.shownameList.remove(row);
                        chatwindow_show[row]=false;
                         //tablelist.remove(row+1);
                        System.out.println("test  table remove");
                          if(row<idnum){
                            idnum=idnum-1;
                              System.out.println("  id  updated");
                              System.out.println("current  id  "+idnum);
                            
                          }
                      
                        System.out.println("after log out");
                        
                        //tablelist.add("remove:"+data[0]);
                    }  else if (data[1].equals(group)) {
                        System.out.println("test group 1"+data[4]);
                        int senderid=Integer.parseInt(data[4]);
                        System.out.println("sout test group 2");
                       String sendername=Online.shownameList.get(senderid);
                        //tablelist.removeAll(tablelist);
                        if (group_show[idnum] == false) {
                          
                            new Groupmessage().setVisible(true);
                              group_show[idnum] =true;
                        }
                        //new Groupmessage().setVisible(true);
                            if(leavegroupchat==false){
                            
                         Groupmessage.show_message.setText(Groupmessage.show_message.getText().trim()+"  \n"+sendername+":"+data[2]);
                       
                            }
                        //tablelist.add("remove:"+data[0]);
                    } 
                      else if (data[1].equals(groupchat)) {
                        //tablelist.removeAll(tablelist);
                        
                        if (group_show[idnum] == false) {
                          
                            new Groupmessage().setVisible(true);
                              group_show[idnum] =true;
                        }
                      
                    }
                       
                      else if (data[1].equals(leavegroup)) {
                      
                        int leaveidnum = Integer.parseInt(data[2]);
                     String leavename=Online.shownameList.get(leaveidnum);
                        if(leaveidnum==idnum){
                            System.out.println("  id leave   "+idnum);
                        leavegroupchat=true;
                        } else{
                            Groupmessage.show_message.setText(Groupmessage.show_message.getText().trim()+"  \n"+leavename+":"+ "....left  the group");
                        }
                        
                    }
                    else {
                        System.err.println("No Conditions were met. \n");
                    }
                }
            } catch (Exception ex) {
                System.out.println("i am here1");
                
                System.out.println("Lost a connection. \n");
                ex.getMessage();
            }
        }
    }

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed

        if (isConnected == false) {
            username = connection_field.getText();
            

            try {
                s = new Socket(address, port);

                System.out.println(" get port " + s.getLocalPort());
                InputStreamReader streamreader = new InputStreamReader(s.getInputStream());
                reader = new BufferedReader(streamreader);
                writer = new PrintWriter(s.getOutputStream());
                System.out.println(username);
                writer.println("username:" + username);
                writer.flush();

                isConnected = true;
            } catch (Exception ex) {
                
                user_name.setEditable(true);
            }
            new Online().setVisible(true);
           
            ListenThread();
        }

    }//GEN-LAST:event_connectActionPerformed

    private void user_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_nameActionPerformed

    private void connection_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connection_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_connection_fieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
                try {
                    System.out.println("welcome test 1");
                } catch (Exception e) {
                }

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChatterBodLevel;
    private javax.swing.JLabel WelcomeLevel;
    private static javax.swing.JButton connect;
    private static javax.swing.JTextField connection_field;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JButton register_button;
    private javax.swing.JTextField user_name;
    private javax.swing.JLabel welcome_msg;
    // End of variables declaration//GEN-END:variables
}
